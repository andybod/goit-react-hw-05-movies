{"version":3,"file":"static/js/28.052df778.chunk.js","mappings":"iOAUA,EARqB,WACnB,OACE,wDAC4B,SAAC,KAAD,CAAMA,GAAG,IAAT,uBAA8B,MAG7D,E,2BCkCD,EAlCiB,WACf,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,EAAUQ,EACX,IACAC,OAAM,SAAAR,GACLC,EAAS,kCACTQ,QAAQC,IAAIV,EACb,IACAW,SAAQ,kBAAMR,GAAW,EAAjB,GAGd,GAAE,IACH,IAAMS,GAAcV,IAAYJ,EAAOe,OACvC,OACE,+BACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAaC,KAAM,oBAClBd,GAAW,cACXU,IAAc,SAAC,EAAD,IACdZ,IAAS,yBAAMA,IACfF,IAAU,SAACmB,EAAA,EAAD,CAAWnB,OAAQA,QAIrC,C,kDCbD,IAvBkB,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,OAAQoB,EAAmB,EAAnBA,aAC3B,OACE,+BACE,wBACGpB,EAAOqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMzB,GAAE,kBAAawB,GAAME,MAAO,CAAEC,KAAML,GAA1C,UACE,wBAAKG,OAFAD,EADC,OAUnB,C,iECjBD,EAAwB,2B,SCKxB,EAJoB,SAAC,GAAc,IAAZJ,EAAW,EAAXA,KACrB,OAAO,eAAIQ,UAAWC,EAAf,SAA2BT,GACnC,C,+LCAKU,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAEHvB,EAAS,mCAAG,yGAAOwB,EAAP,+BAAc,EAAd,SACLF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCG,EADlC,wCADK,cACjBC,EADiB,yBAKhBA,EAAIC,KAAKxB,SALO,2CAAH,qDAQTyB,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACRF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCG,EADrC,kBACmDI,EADnD,wCADQ,cACpBH,EADoB,yBAKnBA,EAAIC,KAAKxB,SALU,2CAAH,sDAQZ2B,EAAkB,mCAAG,WAAMd,GAAN,uFACdO,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcR,EADd,oBAC4BM,EAD5B,oBADc,cAC1BI,EAD0B,yBAKzBA,EAAIC,MALqB,2CAAH,sDAQlBI,EAAkB,mCAAG,WAAMf,GAAN,uFACdO,EAAAA,EAAAA,IAAA,iBACNP,GADM,OACDQ,EADC,oBACkCF,EADlC,oBADc,cAC1BI,EAD0B,yBAKzBA,EAAIC,KAAKK,MALgB,2CAAH,sDAQlBC,EAAkB,mCAAG,WAAOjB,GAAP,4FAAWS,EAAX,+BAAkB,EAAlB,SACdF,EAAAA,EAAAA,IAAA,iBACNP,GADM,OACDQ,EADC,oBACkCF,EADlC,gCACiEG,IAFnD,cAC1BC,EAD0B,yBAKzBA,EAAIC,KAAKxB,SALgB,2CAAH,qD","sources":["components/NotFoundView/NotFoundView.jsx","components/HomePage/HomePage.jsx","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","services/movies-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst NotFoundView = () => {\n  return (\n    <h1>\n      Page is not found : Go to <Link to=\"/\">Home page</Link>{' '}\n    </h1>\n  );\n};\n\nexport default NotFoundView;\n","import Container from 'components/Container/Container';\nimport MovieList from 'components/MovieList/MovieList';\nimport NotFoundView from 'components/NotFoundView/NotFoundView';\nimport PageHeading from 'components/PageHeading/PageHeading';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getMovies } from 'services/movies-api';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(results => {\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n  const isNotFound = !loading && !movies.length;\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Trending Movies'}></PageHeading>\n        {loading && 'Loading ...'}\n        {isNotFound && <NotFoundView />}\n        {error && <div>{error}</div>}\n        {movies && <MovieList movies={movies} />}\n      </Container>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import React from 'react';\nimport css from './PageHeading.module.css';\nconst PageHeading = ({ text }) => {\n  return <h1 className={css.title}>{text}</h1>;\n};\n\nexport default PageHeading;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=d7ce098483e4277541d55c32708434d8\n\nconst API_KEY = 'd7ce098483e4277541d55c32708434d8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n"],"names":["to","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally","isNotFound","length","Container","PageHeading","text","MovieList","prevLocation","map","id","original_title","state","from","className","css","API_KEY","axios","END_POINTS","page","res","data","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}