{"version":3,"file":"static/js/736.07c55ebc.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","components/MoviesPage/MoviesPage.jsx","webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","services/movies-api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"searchInput\":\"SearchBar_searchInput__S8ff+\",\"searchButton\":\"SearchBar_searchButton__hgPYE\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport s from './SearchBar.module.css';\nconst SearchBar = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.searchForm}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n          className={s.searchInput}\n        />\n        <button type=\"submit\" className={s.searchButton}>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import Container from 'components/Container/Container';\nimport MovieList from 'components/MovieList/MovieList';\nimport PageHeading from 'components/PageHeading/PageHeading';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchByQuery } from 'services/movies-api';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            alert('No movies found!');\n          }\n\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  // onSubmit\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Movie Search'} />\n\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n\n        <SearchBar onSearch={onSubmit} />\n        {movies && <MovieList movies={movies} prevLocation={location} />}\n      </Container>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import React from 'react';\nimport css from './PageHeading.module.css';\nconst PageHeading = ({ text }) => {\n  return <h1 className={css.title}>{text}</h1>;\n};\n\nexport default PageHeading;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=d7ce098483e4277541d55c32708434d8\n\nconst API_KEY = 'd7ce098483e4277541d55c32708434d8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n"],"names":["movies","prevLocation","map","id","original_title","to","state","from","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","className","s","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","fetchByQuery","then","results","length","catch","console","log","finally","Container","PageHeading","text","query","MovieList","css","API_KEY","axios","END_POINTS","getMovies","page","res","data","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}